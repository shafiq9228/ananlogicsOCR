package com.analogics.ocr;import android.os.Bundle;import android.os.Environment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.recyclerview.widget.RecyclerView;import com.analogics.R;import com.google.android.material.bottomsheet.BottomSheetDialogFragment;import java.io.File;import java.util.ArrayList;public class ImagePickerSheet extends BottomSheetDialogFragment {    String folderPath;    String serialNumber;    ClickInterFace interFace;    public ImagePickerSheet(String serialNumber, ClickInterFace interFace) {        this.serialNumber = serialNumber;        this.interFace = interFace;    }    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        return LayoutInflater.from(getContext()).inflate(R.layout.image_picker_layout, container, false);    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        String sdcardPath = Environment.getExternalStorageDirectory() + "/Android/";        folderPath = sdcardPath + "TSSPDCL_OFFLINE_IMAGES/" + serialNumber;        ArrayList<String> photoList = getImageNamesFromFolder(folderPath);        RecyclerView imagesRv = view.findViewById(R.id.imagesRv);        imagesRv.setAdapter(new ImageItem(                photoList, requireActivity(), folderPath, interFace        ));    }    private ArrayList<String> getImageNamesFromFolder(String folderPath) {        ArrayList<String> imageNamesList = new ArrayList<>();        File folder = new File(folderPath);        if (folder.exists() && folder.isDirectory()) {            File[] files = folder.listFiles();            if (files != null) {                for (File file : files) {                    if (isImageFile(file)) {                        imageNamesList.add(file.getName());                    }                }            }        }        return imageNamesList;    }    private boolean isImageFile(File file) {        String name = file.getName();        return name.endsWith(".jpg") || name.endsWith(".jpeg") || name.endsWith(".png") || name.endsWith(".gif");    }    @Override    public void onDestroy() {        super.onDestroy();    }}